{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // === Receiver ESP32 Code ===\
// This ESP32 connects to the Transmitter's AP and listens to UDP\
\
#include <WiFi.h>\
#include <WiFiUdp.h>\
\
const char* ssid = "ESP32-Transmitter"; // Same as transmitter's AP SSID\
const char* password = "12345678";      // Same password\
WiFiUDP udp;\
\
void setup() \{\
  Serial.begin(115200);\
  delay(1000);\
\
  // Connect to the AP\
  WiFi.begin(ssid, password);\
  Serial.print("Connecting to WiFi");\
  while (WiFi.status() != WL_CONNECTED) \{\
    delay(500);\
    Serial.print(".");\
  \}\
  Serial.println("\\nConnected to transmitter");\
\
  udp.begin(4210); // Must match the transmitter's port\
  Serial.println("Listening for UDP packets...");\
\}\
\
void loop() \{\
  int packetSize = udp.parsePacket();\
  if (packetSize > 0) \{\
    char incoming[255];\
    int len = udp.read(incoming, 255);\
    if (len > 0) \{\
      incoming[len] = '\\0';\
    \}\
\
    int rssi = WiFi.RSSI(); // Get signal strength\
    Serial.print("Received: ");\
    Serial.print(incoming);\
    Serial.print(" | RSSI: ");\
    Serial.print(rssi);\
    Serial.println(" dBm");\
\
    // You can also log this to SD card or Serial Plotter\
  \}\
\
  delay(100); // Small delay\
\}\
}